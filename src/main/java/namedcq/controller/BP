ALTER TABLE `docDetail` ADD FULLTEXT(`docDetail`,`docHowTo`);
SELECT * FROM `docDetail` WHERE MATCH (docDetail,docHowTo) AGAINST ('Rock')
SELECT * FROM docHierarchy WHERE MATCH (docHierarchyName,docHierarchyOwner) AGAINST ('jack')
SELECT * FROM docHierarchy WHERE docHierarchyName LIKE '%l%';


package namedcq.controller;

import java.util.List;

import namedcq.model.ActivityDataMain;
import namedcq.model.ActivityDataSet;
import namedcq.model.ActivityHierarchy;
import namedcq.model.News;
import namedcq.model.Province;
import namedcq.model.User;
import namedcq.serviceforandroid.DataListService;
import namedcq.serviceforandroid.SuperSearchService;
import namedcq.servicefordata.OutputDataService;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Required;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;

@Controller
public class AndroidServiceController {

	private OutputDataService outputDataService;
	private DataListService dataListService; 
	private SuperSearchService superSearchService;
	
	
	@Required
	@Autowired
	public void setDataListService(DataListService dataListService) {
		this.dataListService = dataListService;
	}
	@Required
	@Autowired
    public void setInputDataService(OutputDataService outputDataService) {
		this.outputDataService = outputDataService;
	}
	//	{"provinces":"กรุงเทพ"}
//	@RequestMapping(value="/sayHellos/{name}",method=RequestMethod.GET , produces={"application/json; charset=UTF-8"})
	@RequestMapping(value="/sayHellos",method=RequestMethod.POST , produces={"application/json; charset=UTF-8"} )
	public @ResponseBody String sayHellos( @RequestBody Province p ){

	    Province province = (Province) outputDataService.getProvinceData(p.getProvinces());
		return "Hi "+p.getProvinces() + province.getProvinces() ;
	}
	
	
	@RequestMapping(value="/sayHello/{name}",method=RequestMethod.GET )
	public @ResponseBody String sayHello( @PathVariable String name ){
		
		List<Province> province = (List<Province>) outputDataService.getProvince(name);
		//String pwds = province.get(0).getProvinces();	
		return "Hi "+name + province.get(0).getRegion();
	}
	
	
	@RequestMapping(value="/viewUser/{id}",method=RequestMethod.GET)
	public String viewUser(@PathVariable String id, Model model ){		
		User user = new User(id,id+ "name");
		List<Province> province = (List<Province>) outputDataService.getProvince(id);
		
		model.addAttribute("user", province.get(0));
		
		return "viewUser"; // ส่งไป view
	}
	/*
	@RequestMapping(value="/getUsers/{id}",method=RequestMethod.GET)
	public @ResponseBody Province getUsers(@PathVariable String id){
		User user = new User(id,id+ "name");
		Province provinceX = new Province("ชลบุรี","ข่าวสด กลุ่มหัวรุนแรงรัฐอิสลาม หรือ ไอเอส ได้เผยแพร่คลิปวีดีโอลงบนอินเทอร์เน็ต อ้างว่าได้สังหารโหด ด้วยการเผาทั้งเป็น เรืออากาศโท โมอัซ อัล-คาซัสเบห์ นักบินของกองทัพอากาศจอร์แดน");
		return provinceX;
	}
	*/

	@RequestMapping(value="/getUser/{id}",method=RequestMethod.GET)
	public @ResponseBody User getUser(@PathVariable String id){
		User user = new User(id,id+ "name");
		return user;
	}
	
	@RequestMapping(value="/getNew/{id}",method=RequestMethod.GET)
	public @ResponseBody Province getNew(@PathVariable String id){
		//User user = new User(id,id+ "name");
		Province provinceX = new Province("ชลบุรี","ข่าวสด กลุ่มหัวรุนแรงรัฐอิสลาม หรือ ไอเอส ได้เผยแพร่คลิปวีดีโอลงบนอินเทอร์เน็ต อ้างว่าได้สังหารโหด ด้วยการเผาทั้งเป็น เรืออากาศโท โมอัซ อัล-คาซัสเบห์ นักบินของกองทัพอากาศจอร์แดน");
		return provinceX;
	}

	@RequestMapping(value="/getActivityHierarchy/",method=RequestMethod.GET , produces={"application/json; charset=UTF-8"})
	public @ResponseBody List<ActivityHierarchy> getActivityHierarchy(){
		List<ActivityHierarchy> activityHierarchyList = (List<ActivityHierarchy>) outputDataService.getActivityHierarchyList();
		return activityHierarchyList;
	}
	
	@RequestMapping(value="/getActivityHierarchyOption",method=RequestMethod.POST  , produces={"application/json; charset=UTF-8"})
	public @ResponseBody List<ActivityHierarchy> getActivityHierarchyOption( @RequestBody ActivityHierarchy name){
	
		List<ActivityHierarchy> activityHierarchyListByOption = (List<ActivityHierarchy>) outputDataService.getActivityHierarchyListOption(name.getActivtyName());
		
		return activityHierarchyListByOption;
	}
	
	@RequestMapping(value="/getActivityDataMain",method=RequestMethod.GET  , produces={"application/json; charset=UTF-8"})
	public @ResponseBody List<ActivityDataMain> getActivityDataMainList(){
	
		List<ActivityDataMain> ActivityDataMain = (List<ActivityDataMain>) outputDataService.getActivityDataMainList();
		
		return ActivityDataMain;
	}
	
	@RequestMapping(value="/getActivityDataSet",method=RequestMethod.GET  , produces={"application/json; charset=UTF-8"})
	public @ResponseBody ActivityDataSet getActivityDataSet(){
	
	//	ActivityDataSet activityDataSet = new ActivityDataSet(inputDataService.getActivityDataMainSet());
		ActivityDataSet activityDataSet = new ActivityDataSet(outputDataService.getActivityDataMainList(),outputDataService.getActivityHierarchyList(),outputDataService.getActivityCall());
				
		return activityDataSet;
	}
	
	@RequestMapping(value="/getNews",method=RequestMethod.GET  , produces={"application/json; charset=UTF-8"})
	public @ResponseBody List<News> getNews(){
	
		List<News> news = (List<News>) outputDataService.getNews();
		
		return news;
	}
	
	/*
	 *	@RequestMapping(value="/getActivityHierarchyOption",method=RequestMethod.POST  , produces={"application/json; charset=UTF-8"})
	public @ResponseBody List<ActivityHierarchy> getActivityHierarchyOption( @RequestBody ActivityHierarchy name){
	 * */
	
	@RequestMapping(value="/getDataForListView",headers = "content-type=application/json; charset=utf-8",method=RequestMethod.POST  , produces={ "application/json","text/plain", "application/* ; charset=UTF-8"})
	public @ResponseBody ActivityDataSet getDataForListView( @RequestBody ActivityHierarchy name){
	 
		ActivityDataSet activityDataSet = (ActivityDataSet) dataListService.getActivityDataSetForAndroid(name.getActivtyName());
		System.out.println("This is a Logggggggggggg");
		System.out.println(name.getActivtyName());
		System.out.println(name.getActivtyName());
		System.out.println(name.getActivtyName());
		System.out.println(name.getActivtyName());
		System.out.println(name.getActivtyName());
		System.out.println(name.getActivtyName());
		System.out.println(name.getActivtyName());
		System.out.println(name.getActivtyName());
		System.out.println(name.getActivtyName());
		System.out.println(name.getActivtyName());
		System.out.println("This is a Logggggggggggg");
		return activityDataSet;
	}
	
	@RequestMapping(value="/getDataForSearch",method=RequestMethod.POST  , produces={"application/json; charset=UTF-8"})
	public @ResponseBody List<ActivityDataMain> getDataForSearch( @RequestBody ActivityHierarchy name){
	// ยังพังอยู่
		List<ActivityDataMain> activityDataListForSearch = (List<ActivityDataMain>) superSearchService.getSearchData(name.getActivtyName());
		
		return activityDataListForSearch;
	}


}
